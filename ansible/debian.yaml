---
# ansible-playbook -b packages.yaml --ask-become-pass
# Basic set of install items
- hosts: localhost
  # var files. File with the os family name will overwrite values in defaults
  vars_files:
  - "defaults.yaml"
  - "{{ ansible_facts['os_family'] }}.yaml"
  tasks:
  - name: Install all packages
    ansible.builtin.package:
      name:
        - "{{ binutils }}"
        - "{{ binwalk }}"
          # - "{{ build_essential }}"
        - "{{ ca_certificates }}"
        - "{{ cfssl }}"
        - "{{ cmake }}"
        - "{{ curl }}"
        - "{{ containerd }}"
        - "{{ diffutils }}"
        - "{{ direnv }}"
        # - "{{ distrobox }}"
        - "{{ flatpak }}"
        - "{{ gnome_flatpak }}"
        - "{{ gcc }}"
        - "{{ gdb }}"
        - "{{ gettext }}"
        - "{{ git }}"
        - "{{ gnupg }}"
        - "{{ gzip }}"
        - "{{ jq }}"
        - "{{ imagemagick }}"
        - "{{ kubectx }}"
        - "{{ launchpad }}"
        - "{{ libbz2_dev }}"
        - "{{ libffi_dev }}"
        - "{{ liblzma_dev }}"
        - "{{ libncursesdev }}"
        - "{{ libpcsclite_dev }}"
        - "{{ libpq }}"
        - "{{ libreadline }}"
        - "{{ sqlite }}"
        - "{{ libssl_dev }}"
        - "{{ libtool }}"
        - "{{ libtool_bin }}"
        - "{{ libxml2_dev }}"
        - "{{ libxmlsec1_dev }}"
        - "{{ llvm }}"
        - "{{ lsb_release }}"
        - "{{ make }}"
        - "{{ miniupnpc }}"
        # - "{{ neovim }}"
        - "{{ netcat }}"
        - "{{ ncurses_base }}"
        - "{{ net_tools }}"
        - "{{ nmap }}"
        - "{{ nodejs }}"
        - "{{ openssl }}"
        # - "{{ podman }}"
        - "{{ proxychains }}"
        - "{{ pip }}"
        - "{{ pipx }}"
        - "{{ pipenv }}"
        - "{{ printer_driver }}"
        - "{{ python3 }}"
        - "{{ python_is_python3 }}"
        - "{{ pyvenv }}"
        - "{{ redis }}"
        - "{{ tcpdump }}"
        - "{{ telnet }}"
        - "{{ texlive }}"
        - "{{ tkinter }}"
        - "{{ tmux }}"
        - "{{ tor }}"
        - "{{ unar }}"
        - "{{ unzip }}"
        - "{{ vim }}"
        - "{{ wget }}"
        - "{{ whois }}"
        - "{{ wmctrl }}"
        - "{{ xsel }}"
        - "{{ xz_utils }}"
        - "{{ yq }}"
        - "{{ zlib1g_dev }}"
      state: latest
  - name: Install nvm
      ansible.builtin.shell: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
        nvm install --lts
        rm -f ~/.npmrc
        npm install yarn
      args:
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
  - name: Install tailscale
     ansible.builtin.shell: |
       curl -fsSL https://tailscale.com/install.sh | sh
  - name: Install cloud sql proxy
    ansible.builtin.shell: |
      # https://cloud.google.com/sql/docs/mysql/sql-proxy
      curl -o /usr/local/bin/cloud-sql-proxy https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.10.1/cloud-sql-proxy.linux.amd64
      chmod +x /usr/local/bin/cloud-sql-proxy
    args:
      creates: "/usr/local/bin/cloud-sql-proxy"
