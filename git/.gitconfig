# For all options see https://git-scm.com/docs/git-config
[user]
	name = crosleyzack
	email = crosleyzack@gmail.com
[init]
	defaultBranch = main
[core]
	editor = vim
[color]
	ui = true
[alias]
	tree = log --graph --decorate --pretty=oneline --abbrev-commit
	unstage = reset HEAD --
	staged = diff --staged
	last = log -1 HEAD
	aware = add -N
	aliases = config --get-regexp '^alias\\.'
	yolo = push --force-with-lease
	recent = for-each-ref --count=10 --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) (%(color:green)%(committerdate:short)%(color:reset))'
	upstream = push -u origin HEAD
	ta = log --all --graph --oneline --decorate --simplify-by-decoration --abbrev-commit
	amend = !git log -n 1 --pretty=tformat:%s%n%n%b | git commit -F - --amend
	details = log -n1 -p --format=fuller
	# Checks all commits to check all lines to get total number you committed. This gets _REALLY_ slow for large projects.
    lines-committed = !git ls-files | xargs -n1 git blame --line-porcelain | sed -n 's/^author //p' | uniq -ic | grep -iF "crosley" | awk '{s+=$1} END {print s}'
    # get files in branch which are changed from main
    diff-main = !git diff --name-only $1 $(git merge-base $1 $(git main))
    # If origin/HEAD doesn't exist, run 'git remote set-head origin -a'
	main = !git symbolic-ref refs/remotes/origin/HEAD | cut -d'/' -f4
	# get commits from origin, rebase main, rebase current branch off of main.
	update = !BRANCH=$(git branch --show-current) && git checkout-m && git fetch && git rebase && git checkout $BRANCH && git rebase-m
	rc = rebase --continue
	checkout-m = !git checkout $(git main)
    rebase-m = !git rebase $(git main)
    # diff a file with its version on main branch. Accepts file argument after.
    main-diff = diff ..main --
